package com.tutorial.main;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.util.Random;

public class EnemyBossBullet extends GameObject {
	
	private Handler handler; 
	private int change = 0; 
	private GameObject player;
	Random r = new Random();
	private int R; 
	private int G; 
	private int B; 
	
	public EnemyBossBullet(int x, int y, ID id, Handler handler){ 
		super(x,y,id);
		this.handler = handler;
		for( int i  = 0; i < handler.object.size(); i++){
			if(handler.object.get(i).getId() == ID.Player) {
			    player = handler.object.get(i);
				}
		}
		float diffX = x - player.getX() - 8;
		float diffY = y - player.getY() - 8;
		float distance = (float) Math.sqrt((x-player.getX())*(x-player.getX()) + (y-player.getY())*(y-player.getY()));
		
		velX = (float) ((-1.0)/distance) * 5*diffX;
		velY = (float) ((-1.0)/distance) *5* diffY;
	} 
	public Rectangle getBounds(){ 
		return new Rectangle((int)x,(int) y, 16, 16);
	}
	public void tick(){ 
		x += velX;
		y += velY;
		 R =  r.nextInt(255);
		 G =  r.nextInt(255);
		 B =  r.nextInt(255);
				
		
		
		//if(y <= 0 || y >= Game.HEIGHT -64) { 
		//	velY *= -1;
		//} 
		//if(x <= 0 || x >= Game.WIDTH - 16){ 
		//	velX *= -1;
		//}
		if(y >= Game.HEIGHT)handler.removeObject(this);
		if(x >= Game.WIDTH)handler.removeObject(this);
		if(y <= 0)handler.removeObject(this);
		if(x <= 0)handler.removeObject(this);
		
		
		handler.addObject(new BasicTrail(x,y,ID.BasicTrail,Color.RED, 8, 8 ,0.1f, handler));
		
	}
	
	public void render(Graphics g){ 
		//Graphics2D g2d = (Graphics2D) g;
		//g.setColor(Color.green);
		//g2d.draw(getBounds());
		
		
				g.setColor(Color.black);
				g.fillRect((int)x, (int)y, 16, 16);
				change++; 
		 
	}

}
