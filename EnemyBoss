package com.tutorial.main;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.util.Random;

public class EnemyBoss extends GameObject {
	
	private Handler handler; 
	private int change = 0; 
	private int timer = 130;
	private int timer2 = 50;
	private int barrage = 200;
	private int barragestop = 0;
	private int exit = 100;
	private int spiral = 1000;
	private int count = 0;
	private int spiralstop = 0;
	
	Random r = new Random();
	
	public EnemyBoss(int x, int y, ID id, Handler handler){ 
		super(x,y,id);
		this.handler = handler;
		velX = 0; 
		velY = 2;
		
	}
	public Rectangle getBounds(){ 
		return new Rectangle((int)x,(int) y, 64, 64);
	}
	public void tick(){ 
		x += velX;
		y += velY;
			if(timer <= 0 ) velY = 0;
			else timer--;
			
		if(timer <= 0) {
			timer2--;
			barrage--;
			spiral--;
		}
		if(timer2<= 0)
		{ 
			if(velX == 0) velX = 4;
			int spawn = r.nextInt(10);
			if(spawn == 0) handler.addObject(new EnemyBossBullet((int)x + 32, (int)y+32, ID.BasicEnemy,handler));
		
		}
		if(barrage <= 0){
			int spawn = r.nextInt(7);
			if(spawn == 0) handler.addObject(new EnemyBossBullet((int)x+32, (int)y+32, ID.BasicEnemy,handler));
			barragestop++;
			
		}
		if(barragestop >= 50) {
			barragestop = 0;
			barrage = 150;
			
		}if(spiral <= 0){
			int spawn = r.nextInt(5);
			if(spawn == 0) handler.addObject(new Spiral((int)x + 32, (int)y+32, ID.BasicEnemy,handler));
			spiralstop++;
		}if(spiralstop >= 200){
			spiralstop = 0;
			spiral = 250;
		}
		
		//if(y <= 0 || y >= Game.HEIGHT -64) { 	velY *= -1;} 
		if(x <= 0 || x >= Game.WIDTH - 64){ 	velX *= -1;}
		
		handler.addObject(new BasicTrail(x,y,ID.BasicTrail,Color.BLACK, 64, 64 ,0.1f, handler));
		
	}
	
	public void render(Graphics g){ 
		Graphics2D g2d = (Graphics2D) g;
		g.setColor(Color.green);
		g2d.draw(getBounds());
		
		
		//g.setColor(Color.black);
		//g.fillRect((int)x, (int)y, 64, 64);
		change++; 
		 
	}

}
